>>> Piony >>>

TODO
	2015-04-20 [X] first extract radial layout
	2015-04-20 [$] then reconcile all buttons and rotate paint itself
		: but is it really possible for layout abstraction?
		:> in which case I will try prototype w/o layout to check smoothiness
	2015-04-22 [X] FIX text 'krita' in the center of ring
	[_] Compare performance for individual pathes and QTransform rotated.

RFC
	[_] RingSegment: extract separate funcs
		[_] coord-systems conversion code
		[_] segment contour shrinking
	[_] Try extract R() as single separate function instead defining in each class

IDEAS
	2015-04-18 [$] use OpenGL window with transparent background :> replaced by pyqt
		:> need too much time to start application, delayed feeling
	2015-04-23 [$] create 3D sphere, which can be rotated with M2 with buttons on it
		: ALT: plain-composition of window with magnify
		:> Too slow the choosing of action, distraction from drawing process
	[_] how about elliptic rings, with slope on 60 deg -- for hand anisotropy?
		of course they can be rotated, changing their slope
	[_] mouse gestures -- useful as I can write complex symbols by pen
		http://www.gulon.co.uk/2013/01/14/pyqt4-mouse-gestures-part-deux/
	[_] use whole screen overlay
		[_] toggle show/hide instead of creating each time
		[_] whole area around buttons to intercept clicks from drawing in krita
		[_] ability to create smart hover for buttons, etc, many comfortable UI
		[_] gestures drawing on transparent canvas

	ICONS
		[_] can set icons instead of text (applied by blending) in petals
			| maybe I will be OK simply with hieroglyphs? (case: setStyleSheet)
		[_] draw icons directly on buttons in edit-icons mode! Export them!


> LAYOUT

<Nesting>   Layer:l - Ring:r - Sector:s - Grid:x:y - Button:b
: KISS : for now each level can accept only ones below it
	Window : ???
		overlay : local or fullscreen
		several slices to switch as layers
	Slice : RingLayout (Cascade)
		< Manage rings, spacers and four corner buttons (if present -- nw,ne,sw,se)
		several rings alongside
		drag ring and switch nesting of neighbours (each button will scale size)
		: to adapt icons towards hand's anisotropy
		: to group instruments for current task from different rings
		rings can be hidden, remaining only small icon in window frame corner
		has percentage thickness for elastic or fixed width
		| options: style
	Ring : SectorLayout (Fan)
		< Manage sectors, spacers
		[_] emit event on rotate by M3
		[_] each petal will shrink in length and will be more compact
		[_] func to insert new petal takes button and position to insert (<Ring_n,CCW_pos>)
		[_] -r <N> : many rings of petals -- 1,2,3... -- next around previous
		[_] -s <N> : slots dynamic / fixate amount on ring
	Sector : GridLayout (BTree)
		has percentage for elastic filling (60% -> for 6 buttons it's a=360/6*0.6)
		or has fixed angle for strict mosaic composition
		space-filler is simply button w/o text and events
		: but how about partial fillers -- which has air-strife menu?
	Grid (or replace by binary tree nested splitting? It will be 3x3 max...)
		divide cell to keep relative position of it's parts
		: helpful when you need keep several complementary buttons alongside
		same bkgr color for grouped buttons -- like painting cells similar to Excel
		merging cells to construct bigger one for more important button
	Button
		emit event
			on press
			close-up to borders or center
			cross borders
		shape -- two straight lines and two concentric arcs, rounded corners
			coeff of roundness: 0..1 as for square..circle
			: for more easy pressing of petals, their inner radius may be
			: negative -- so I will use my elliptic petals in any case:)


CONFIGS
	[_] Command line arguments support
		https://docs.python.org/3/library/argparse.html
		https://pythonhosted.org/kitchen/unicode-frustrations.html
		https://docs.python.org/2/tutorial/introduction.html#tut-unicodestrings

	2015-04-23 [X] Basic config support in json
	[_] Gradual config complexity
		[_] plain 1D list of keys : 1-ring
		[_] dict for some items
		[_] list of N lists : N-ring
		: ... air-widgets, etc...

	[_] Separate settings file
		[_] <krita...>.json
			| it can be merged with Qt style file, written in CSS (QSS?)
		[_] style.js or style.css
			: default style, if not specified one in <...>.json
			: colors, spacings, curveness, etc
		[_] keymap.json
			: general kbd/mse/wst keys to control menu
		[_] settings.ini

	<Flags>
	[_] -c /{-/<path>}: path to configs
		[_] - : read config from stdin
		[_] <path> : relative in ./cfgs/ or absolute in ~/.piony/
	[_] -e "[...]" : setup layout directly on cmdline
		[_] can be specified several times -- one for each Slice

	Dirty fast
		http://martin-thoma.com/configuration-files-in-python/
	Species
		https://docs.python.org/3.4/library/configparser.html
		http://www.voidspace.org.uk/python/configobj.html
		https://docs.python.org/3.4/library/shlex.html#module-shlex
		https://docs.python.org/2/library/json.html#module-json
		http://pyyaml.org/wiki/PyYAMLDocumentation
		OR: use regular python files!

CONTROLS
	[_] launch until hold
		pressDown -- menu appears, as you hover buttons highlighted, pressUp -- activate
		if you don't move from center -- menu disappears
	2015-04-12 [X] holding M3 allows to move menu on screen
	[_] Replace custom drag by M3 to official dragMoveEvent ? Or eventHolder
	[_] don't press button until mouse release
		: allow to undo pressing, moving from button to center

	MODES
		[_] while you hold Mod (C/S/A), show another layer (total 1+3!)
		[_] clicking petal with Mod pressed choses linked layer (total N1)
			: can be combined with holding mode
	LAYERS
		[_] switch wpad wheel functions through additional ui around bud
		[_] wpad wheel must select current sector of radial menu
			[_] try to select by absolute wheel value, not relative
		[_] wpad wheel can scroll through available buds and wheels (cool: wheel to choose wheel!)
		[_] more logically would be show different rings when you hold modifiers
			C/S/A instead of allowing drag window on M1, as it's already possible with i3
		| How-to intuitively fuse between layers by UI element?

UIX
	2015-04-13 [$] clicks outside menu must be intercepted (not pass over to underlying programm)
		: can be done by fullscreen transparent overlay
		:> actually better to close window on Leave event ouside QRegion circle
	2015-04-20 [X] RingSegment class (draft version)
	2015-04-22 [X] BUG: replace items order CW -> CCW
	[_] On button press event change its hint to green
		: this will give feedback what will be pressed
	[_] BUG: petal bHold isn't released if you click on ContextMenu
		https://wiki.python.org/moin/PyQt/Handling%20context%20menus
	[_] Suggest menu scaling in edit mode. Sizes: min from font, max from screen.
	[_] BUG: resets geometry position to 0,0 when cursor at screen border
	[_] BUG: no text when only 1 element in ring list -- must show at farthest
	[_] BUG: exception when list is empty -> must show only ring bkgr
	[_] If possible, use styles instead my own vehicle:
		http://wiki.qt.io/Main_Page
		http://doc.qt.io/qt-4.8/style-reference.html
	<Flags>
	[_] -P : disable pop-up items, for those who is irritated


VISUALS
	[_] for Tab selecting of petal, there must be highlight different from hover
		thin red-thansparent gradient lines as outer contour to current yellow.
		they will cover only half-leght of one petal, fading out with distance
	[_] replace filling with gradient (radial?) to add volume
		http://doc.qt.digia.com/4.6/painting-painterpaths.html
	[_] Adjustable RingSegment class (merge petal's ellipse and segment)
		[_] use bezier (cubicTo) to draw segment -- then I will have more control
		: http://doc.qt.digia.com/4.6/painting-painterpaths.html
	2015-04-14 [X] make clipping ellipse over petals to leave focus on circle, not square
	2015-04-21 [X] BUG: bad antialising due to clipping mask, make it more steady
	2015-04-21 [X] BUG: petals positions are somewhat none-symmetrical
		2015-04-18 [$] lets try QPointF :: No such
		2015-04-18 [$] place all button on top each other and rotate only painting inside
	2015-04-21 [X] inner petal's half-ellipses must cover arc (180-a), outer=(180+a)
		http://en.wikipedia.org/wiki/Ellipse
	2015-04-23 [X] self.spacing() as pre-modifier for button outer size: path and mask

	GROUPS
		[_] color groups -- different filler tint colors for slots in groups
			case: re-use values from setStyleSheet() instead my own
		[_] different petal angle width depending on usage frequency
			like ccw-decreasing spiral as top-right petals are most simple to access
			[_] may use QSpacerItem to deal with unfull fixed-angle petals ring

SYSTEM
	2015-04-23 [X] Port to PyQt5 and python3
		2015-04-23 [X] http://pyqt.sourceforge.net/Docs/PyQt5/pyqt4_differences.html
		2015-04-23 [X] Complete current dev stage and only then port
	[_] Port layouts to QGraphicsLayout and QGraphicsWidget (for QRectF support)
		http://pyqt.sourceforge.net/Docs/PyQt4/qgraphicslayoutitem.html
		: A top-level item's style defaults to QGraphicsScene.style
		: Graphics View provides a custom drag and drop framework, different from QWidget.
		: If you are subclassing from QGraphicsItem directly and not from one
		: of the provided subclasses like QGraphicsEllipseItem, make sure
		: your contains() and boundingRect() methods are returning the correct results
		http://www.qtcentre.org/threads/40241-PyQt-QGraphicsItem-not-recieving-mouse-events
	[_] try set my window as 'modal' -- to intercept all input events
		: but this possible only for subwindows, or not?
	[_] find last active window to send keystrokes
		https://github.com/Mte90/QAsana/blob/master/qasana.py
		: or you can simply unfocuse current before sending keystrokes
	[_] Maybe, make on close() teleport mouse back to starting position?
		: it's convenient for mouse, but has not much sense for Wacom
	<Flags>
	[_] -d : start as background demon
		[_] check self.hide() functional -- does it hide from i3wm?
		[_] use only one instance (now old autocloses on focus lost when new created)
			: https://pythonadventures.wordpress.com/2013/01/10/launch-just-one-instance-of-a-qt-application/
	[_] -f : overlay fullscreen/local
	[_] -v <v/a>: verbose (debug) {all/{visuals/actions}}
		[_] activates several global variables from common.py
	[_] -p : toggle action print/execute
		[_] simulate action due to it's field 'type' in config
		[_] print this action on stdout
		: for bash-friendly dmenu-like usecase, complementary with '-e' flag



> OPTIMIZATION
	[_] Optimize event calls with caching and restructuring
		: e.g. setGeometry called three times on launch!
	[_] multithreading to accelerate air-layouts pre-creation and launch time
		http://stackoverflow.com/questions/2846653/python-multithreading-for-dummies
		http://www.tutorialspoint.com/python/python_multithreading.htm
	[_] for layout-on-cmdline use shared button style to start-up much faster


> SUPPORT
	[_] Isolated environment -- several testing environments
		http://habrahabr.ru/post/248189/
		http://www.fig.sh/
	[_] Docstrings, make documentation -- add docs extraction
		https://www.python.org/dev/peps/pep-0257/
	[_] Style guideline -- add script with autochecking
		https://code.google.com/p/rad2py/wiki/CodingStandard
	[_] Multilang support -- extract texts into lang file
		http://blog.nicolargo.com/2012/11/internationaliser-ses-programmes-python.html


> EDIT MENU (not expected untill v2.5)
	[_] activate editing mode from context menu
		drag-n-drop buttons around rings
	Animation
		http://doc.qt.io/qt-5/qpropertyanimation.html

